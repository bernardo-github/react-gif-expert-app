{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.jsx","components/GifGrid.js","hooks/useFetchGifs.jsx","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","add","useState","inputValue","setInputValue","onSubmit","ev","preventDefault","trim","length","type","value","placeholder","onChange","target","GifGridItem","img","className","src","url","alt","title","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","image","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EAECC,mBAAS,IAFV,mBAE5BC,EAF4B,KAEhBC,EAFgB,KAepC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAGC,iBACEJ,EAAWK,OAAOC,OAAS,IAC5BR,EAAIE,GACJC,EAAc,MAKlB,SACI,uBACAM,KAAK,OACLC,MAAQR,EACRS,YAAY,kBACZC,SAlBa,SAACP,GAClBF,EAAcE,EAAGQ,OAAOH,aCJnBI,EAAc,SAAC,GAAe,IAAZC,EAAW,EAAXA,IAC3B,OACI,sBAAKC,UAAU,yDAAf,UACI,qBAAKC,IAAMF,EAAIG,IAAMC,IAAOJ,EAAIK,QAChC,8BAAKL,EAAIK,MAAT,W,uBCNEC,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DAEL,mCACA,uCACD,KAJM,SAKDC,MAAM,GAAD,OAFT,uCAES,cAAqBC,UAAWH,GAAhC,oBAHT,mCAGS,kBADV,OAJM,cAKdI,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAf,GAAQ,IAAD,EAC1B,MAAO,CACHgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAG,UAAEH,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBf,QAZtB,kBAebW,GAfa,4CAAH,sDCGRK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACNjB,EAASC,GAAWiB,MAAK,SAACV,GACtBQ,EAAS,CACLT,KAAMC,EACNM,SAAS,SAGlB,CAAEb,IAGEc,EDdmBI,CAAclB,GAAhCM,EAD6B,EAC7BA,KAAMO,EADuB,EACvBA,QAEd,OACI,qCACI,oBAAInB,UAAU,oCAAd,SAAoDM,IAElDa,EACE,mBAAGnB,UAAU,mCAAb,yBAEA,qBAAKA,UAAU,WAAf,SAEIY,EAAKE,KAAI,SAAAW,GAAK,OACV,cAAC,EAAD,CAEA1B,IAAQ0B,GADAA,EAAMV,aEWvBW,EAvBM,WAAO,IAAD,EAEazC,mBAAS,CAAE,cAFxB,mBAEjB0C,EAFiB,KAELC,EAFK,KAMzB,OACM,qCACE,oBAAI5B,UAAU,oCAAd,0BACA,cAAC,EAAD,CAAahB,IAND,SAAEsB,GACpBsB,EAAc,CAAEtB,GAAH,mBAAgBqB,QAMvB,uBAEA,6BAEIA,EAAWb,KAAK,SAAAR,GAAQ,OACtB,cAAC,EAAD,CAA4BA,SAAaA,GAAxBA,Y,MChBjCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d45089e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({ add }) => {\r\n\r\n    const [ inputValue, setInputValue] = useState('');\r\n    const handleChange = (ev) => {\r\n        setInputValue(ev.target.value);\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            add(inputValue);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            placeholder='Nombre de serie'\r\n            onChange={ handleChange }/>\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    add: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { img } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n            <img src={ img.url } alt= { img.title } />\r\n            <p>{ img.title } </p>\r\n        </div>\r\n    )\r\n}\r\n","export  const getGifs = async( category ) => {\r\n       \r\n    const api_key= 'SzTGB7rnELWEXmMg3mJRybSV8IRY0CLa'\r\n    const url_base='https://api.giphy.com/v1/gifs/search'\r\n    const limit = '10'\r\n    const resp = await fetch(`${ url_base }?q=${ encodeURI( category ) }&api_key=${ api_key }&limit=${ limit }`);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n} ","import PropTypes from 'prop-types'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nexport const GifGrid = ({ category }) => {\r\n    const { data, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading ? (\r\n                <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n            ):(\r\n                <div className=\"cardgrid\">\r\n                {\r\n                    data.map(image=>(\r\n                        <GifGridItem \r\n                        key = { image.id }\r\n                        img = { image }/>\r\n                    ))\r\n                }\r\n            </div>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useState, useEffect } from 'react'\r\nimport { getGifs } from './../helpers/getGifs'\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then((gifs) => {\r\n            setstate({\r\n                data: gifs,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [ category ])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [ categories, setCategories ] = useState([ 'One Piece' ]);\r\n  const addCategory = ( category ) => {\r\n    setCategories([ category, ...categories ]);\r\n  }\r\n  return (\r\n        <>\r\n          <h2 className=\"animate__animated animate__fadeIn\">GifExpertApp</h2>\r\n          <AddCategory add= { addCategory }/>\r\n          <hr /> \r\n          \r\n          <ol>\r\n            {\r\n              categories.map( category => (\r\n                <GifGrid key = { category } category = { category }/>\r\n               ))\r\n            }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}